################################################################################
# Makefile for generating EPUB 3 ebooks from content sources.                  #
#                                                                              #
# Version 1.0.1                                                                #
#                                                                              #
# Copyright (C) 2016  Mark A. Gibbs                                            #
#                                                                              #
# This program is free software: you can redistribute it and/or modify         #
# it under the terms of the GNU General Public License as published by         #
# the Free Software Foundation, either version 3 of the License, or            #
# (at your option) any later version.                                          #
#                                                                              #
# This program is distributed in the hope that it will be useful,              #
# but WITHOUT ANY WARRANTY; without even the implied warranty of               #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                #
# GNU General Public License for more details.                                 #
#                                                                              #
# You should have received a copy of the GNU General Public License            #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.        #
#                                                                              #
################################################################################

################################################################################
# Quick guide:                                                                 #
#                                                                              #
# Create a file named "book.mk" (without the quotes) in the same directory as  #
# this makefile, and fill in the required settings (and any optional settings  #
# you like).                                                                   #
#                                                                              #
# Then the command "make" will build your book (and cover thumbnails, if you   #
# have set those options), the command "make clean" will erase anything        #
# generated by "make", and "make check" will run your book through epubcheck   #
# (if you have set up the correct options in "book.mk").                       #
#                                                                              #
# For more options and information check the README at:                        #
#   https://github.com/DarkerStar/epub-makefile                                #
#                                                                              #
################################################################################

# Variable defaults (will probably be overridden) ##############################
builddir := build

epubcheck := $(if $(strip ${EPUBCHECK_JAR}),${EPUBCHECK_JAR},epubcheck.jar)

# Set up commands to be used ###################################################
cmd_zip_create = rm -f -- "$(1)"
cmd_zip_store  = zip -X -Z store "$(1)" $(2)
cmd_zip_add    = zip -D -g -X "$(1)" $(2)

cmd_pngcrush = pngcrush -rem alla -q "${1}" "${1}~" && mv -f -- "${1}~" "${1}"

define cmd_svg_to_png =
	inkscape $(1) --export-png=$(2)
	mogrify -background white -alpha remove -alpha off $(2)
	$(call cmd_pngcrush,$(2))
endef

cmd_epubcheck = java -jar $(epubcheck) $(1)

strip_duplicates = $(if $1,$(firstword $1) $(call strip_duplicates,$(filter-out $(firstword $1),$1)))

# Get the configuration settings for the book ##################################
include book.mk

# Important settings for the makefile ##########################################
# Recommended by the manual
SHELL := /bin/sh

# Make sure all directories are legit
srcdir := $(strip $(if $(strip $(srcdir)), $(srcdir), .))
outdir := $(strip $(if $(strip $(outdir)), $(outdir), .))
builddir := $(strip $(if $(strip $(builddir)), $(builddir), .))

ifeq ($(srcdir),$(builddir))
  $(error srcdir and builddir cannot be the same.)
endif

metafilesdir := $(srcdir)$(strip $(if $(strip $(metafilesdir)),/$(metafilesdir)))

# The actual EPUB file being created
epub := $(outdir)/$(book).epub

epub_metafiles := $(call strip_duplicates,container.xml $(metafiles))

epub_metafiles_container_src := $(filter container.xml,$(metafiles))
epub_metafiles_container_src := $(if $(epub_metafiles_container_src),$(metafilesdir)/$(epub_metafiles_container_src))

epub_content := $(opf) $(content)

# The main make rule ###########################################################
# This makes the book, and - if desired - the cover image and thumbnails.
all : $(epub)

# Pseudotarget to make sure partially-built objects are deleted.
.DELETE_ON_ERROR :

# The book make rule ###########################################################
.INTERMEDIATE : ${builddir}/${book}.epub
${builddir}/${book}.epub : ${builddir}/mimetype $(addprefix ${builddir}/META-INF/,${epub_metafiles}) $(addprefix ${builddir}/OEBPS/,${epub_content})
	@cd ${builddir} && $(call cmd_zip_create,${book}.epub)
	@cd ${builddir} && $(call cmd_zip_store,${book}.epub,mimetype)
	@cd ${builddir} && for f in $(addprefix META-INF/,${epub_metafiles}) ; \
	do \
	  $(call cmd_zip_add,${book}.epub,$$f) ; \
	done
	@cd ${builddir} && for f in $(addprefix OEBPS/,${epub_content}) ; \
	do \
	  $(call cmd_zip_add,${book}.epub,$$f) ; \
	done

${epub} : ${builddir}/${book}.epub
	@mkdir -p -- "${@D}"
	mv -f -- "$<" "$@"

# Copying content documents ####################################################
$(builddir)/OEBPS/% : $(srcdir)/%
	@mkdir -p -- "${@D}"
	cp -f -- "$<" "$@"

# Generate mimetype file #######################################################
${builddir}/mimetype :
	-@echo "Generating mimetype... "
	@mkdir -p -- "${@D}"
	@printf "application/epub+zip" >$@

# Generate META-INF/container.xml file #########################################
ifdef epub_metafiles_container_src

${builddir}/META-INF/container.xml : ${epub_metafiles_container_src}
	@mkdir -p -- "${@D}"
	cp -f -- "${<}" "${@}"

else

${builddir}/META-INF/container.xml :
	-@echo "Generating META-INF/container.xml... "
	@mkdir -p -- "${@D}"
	@{ \
	  echo '<?xml version="1.0"?>' ; \
	  echo '<container version="1.0" xmlns="urn:oasis:names:tc:opendocument:xmlns:container">' ; \
	  echo '	<rootfiles>' ; \
	  for o in ${opf} ; do \
	    printf '\t\t<rootfile full-path="OEBPS/%s" media-type="application/oebps-package+xml"/>\n' "$${o}" ; \
	   done ; \
	  echo '	</rootfiles>' ; \
	  echo '</container>' ; \
	} >"${@}"

endif

# Creating raster images from SVG ##############################################
$(builddir)/OEBPS/%.png : $(builddir)/OEBPS/%.svg
	$(call cmd_svg_to_png,$<,$@)

# Check target #################################################################
check : $(epub)
	$(call cmd_epubcheck,$(epub))

# Clean target #################################################################
clean :
	-@rm -rf -- $(epub) $(builddir)

.PHONY : all check clean
